<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="eae61691-faee-46e8-b540-50486038a109" name="Changes" comment="test(try_to_get_a_nonexistent_book_from_my_bookshelf): :rotating_light: Reed - :white_check_mark: Green - :recycle: Refactor.">
      <change beforePath="$PROJECT_DIR$/readme.md" beforeDir="false" afterPath="$PROJECT_DIR$/readme.md" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JUnit4 Test Class" />
        <option value="Enum" />
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/../.." />
  </component>
  <component name="MavenImportPreferences">
    <option name="importingSettings">
      <MavenImportingSettings>
        <option name="workspaceImportEnabled" value="true" />
      </MavenImportingSettings>
    </option>
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectId" id="2Q6AxKW8N5FYfFGBMqxRAHXOnIX" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary": "JUnit4",
    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit4": "",
    "last_opened_file_path": "C:/Users/nicol/Desktop/Lean mind PE/actividades_lean__mind/ejercicios/ErrorManagement",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.lookFeel",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="org.example" />
    </key>
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
    <key name="CreateTestDialog.RecentsKey">
      <recent name="org.example" />
    </key>
  </component>
  <component name="RunManager" selected="JUnit.LibraryServicesTest">
    <configuration name="LibraryServicesTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="LearningMocks" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.example" />
      <option name="MAIN_CLASS_NAME" value="org.example.LibraryServicesTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="LibraryServicesTest.get_a_book_from_my_bookshelf" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="LearningMocks" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.example" />
      <option name="MAIN_CLASS_NAME" value="org.example.LibraryServicesTest" />
      <option name="METHOD_NAME" value="get_a_book_from_my_bookshelf" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="LibraryServicesTest.put_a_book_in_my_bookshelf" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="LearningMocks" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.example" />
      <option name="MAIN_CLASS_NAME" value="org.example.LibraryServicesTest" />
      <option name="METHOD_NAME" value="put_a_book_in_my_bookshelf" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="LibraryServicesTest.try_to_get_a_nonexistent_book_from_my_bookshelf" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="LearningMocks" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.example" />
      <option name="MAIN_CLASS_NAME" value="org.example.LibraryServicesTest" />
      <option name="METHOD_NAME" value="try_to_get_a_nonexistent_book_from_my_bookshelf" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="LibraryServicesTest.try_to_put_an_existent_book_in_my_bookshelf" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="LearningMocks" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.example" />
      <option name="MAIN_CLASS_NAME" value="org.example.LibraryServicesTest" />
      <option name="METHOD_NAME" value="try_to_put_an_existent_book_in_my_bookshelf" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.LibraryServicesTest" />
        <item itemvalue="JUnit.LibraryServicesTest.put_a_book_in_my_bookshelf" />
        <item itemvalue="JUnit.LibraryServicesTest.try_to_get_a_nonexistent_book_from_my_bookshelf" />
        <item itemvalue="JUnit.LibraryServicesTest.get_a_book_from_my_bookshelf" />
        <item itemvalue="JUnit.LibraryServicesTest.try_to_put_an_existent_book_in_my_bookshelf" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="eae61691-faee-46e8-b540-50486038a109" name="Changes" comment="" />
      <created>1684663906471</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1684663906471</updated>
      <workItem from="1684663907742" duration="10630000" />
    </task>
    <task id="LOCAL-00001" summary=":tada: LearningMocks: Usecases defined.">
      <created>1684674122532</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1684674122533</updated>
    </task>
    <task id="LOCAL-00002" summary="test(put_a_book_in_my_bookshelf): :rotating_light: Reed - :white_check_mark: Green - :recycle: Refactor.">
      <created>1684675362209</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1684675362209</updated>
    </task>
    <task id="LOCAL-00003" summary="test(try_to_put_an_existent_book_in_my_bookshelf): :rotating_light: Reed - :white_check_mark: Green - :recycle: Refactor.">
      <created>1684678254051</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1684678254051</updated>
    </task>
    <task id="LOCAL-00004" summary="test(get_a_book_from_my_bookshelf): :rotating_light: Reed - :white_check_mark: Green - :recycle: Refactor.">
      <created>1684678392846</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1684678392846</updated>
    </task>
    <task id="LOCAL-00005" summary="test(try_to_get_a_nonexistent_book_from_my_bookshelf): :rotating_light: Reed - :white_check_mark: Green - :recycle: Refactor.">
      <created>1684678877211</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1684678877211</updated>
    </task>
    <option name="localTasksCounter" value="6" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value=":tada: LearningMocks: Usecases defined." />
    <MESSAGE value="test(put_a_book_in_my_bookshelf): :rotating_light: Reed - :white_check_mark: Green - :recycle: Refactor." />
    <MESSAGE value="test(try_to_put_an_existent_book_in_my_bookshelf): :rotating_light: Reed - :white_check_mark: Green - :recycle: Refactor." />
    <MESSAGE value="test(get_a_book_from_my_bookshelf): :rotating_light: Reed - :white_check_mark: Green - :recycle: Refactor." />
    <MESSAGE value="test(try_to_get_a_nonexistent_book_from_my_bookshelf): :rotating_light: Reed - :white_check_mark: Green - :recycle: Refactor." />
    <option name="LAST_COMMIT_MESSAGE" value="test(try_to_get_a_nonexistent_book_from_my_bookshelf): :rotating_light: Reed - :white_check_mark: Green - :recycle: Refactor." />
  </component>
</project>